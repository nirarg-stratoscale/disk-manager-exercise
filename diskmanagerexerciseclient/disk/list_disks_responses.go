// Code generated by go-swagger; DO NOT EDIT.

package disk

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/Stratoscale/disk-manager-exercise/models"
)

// ListDisksReader is a Reader for the ListDisks structure.
type ListDisksReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ListDisksReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewListDisksOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewListDisksBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewListDisksUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewListDisksForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewListDisksInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewListDisksOK creates a ListDisksOK with default headers values
func NewListDisksOK() *ListDisksOK {
	return &ListDisksOK{}
}

/*ListDisksOK handles this case with default header values.

successful operation
*/
type ListDisksOK struct {
	Payload models.ListDisksOKBody
}

func (o *ListDisksOK) Error() string {
	return fmt.Sprintf("[GET /disks][%d] listDisksOK  %+v", 200, o.Payload)
}

func (o *ListDisksOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListDisksBadRequest creates a ListDisksBadRequest with default headers values
func NewListDisksBadRequest() *ListDisksBadRequest {
	return &ListDisksBadRequest{}
}

/*ListDisksBadRequest handles this case with default header values.

Invalid parameters
*/
type ListDisksBadRequest struct {
	Payload models.Error400
}

func (o *ListDisksBadRequest) Error() string {
	return fmt.Sprintf("[GET /disks][%d] listDisksBadRequest  %+v", 400, o.Payload)
}

func (o *ListDisksBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListDisksUnauthorized creates a ListDisksUnauthorized with default headers values
func NewListDisksUnauthorized() *ListDisksUnauthorized {
	return &ListDisksUnauthorized{}
}

/*ListDisksUnauthorized handles this case with default header values.

Invalid credentials
*/
type ListDisksUnauthorized struct {
	Payload models.Error401
}

func (o *ListDisksUnauthorized) Error() string {
	return fmt.Sprintf("[GET /disks][%d] listDisksUnauthorized  %+v", 401, o.Payload)
}

func (o *ListDisksUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListDisksForbidden creates a ListDisksForbidden with default headers values
func NewListDisksForbidden() *ListDisksForbidden {
	return &ListDisksForbidden{}
}

/*ListDisksForbidden handles this case with default header values.

No permissions
*/
type ListDisksForbidden struct {
	Payload models.Error403
}

func (o *ListDisksForbidden) Error() string {
	return fmt.Sprintf("[GET /disks][%d] listDisksForbidden  %+v", 403, o.Payload)
}

func (o *ListDisksForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListDisksInternalServerError creates a ListDisksInternalServerError with default headers values
func NewListDisksInternalServerError() *ListDisksInternalServerError {
	return &ListDisksInternalServerError{}
}

/*ListDisksInternalServerError handles this case with default header values.

Internal Error
*/
type ListDisksInternalServerError struct {
	Payload models.Error500
}

func (o *ListDisksInternalServerError) Error() string {
	return fmt.Sprintf("[GET /disks][%d] listDisksInternalServerError  %+v", 500, o.Payload)
}

func (o *ListDisksInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
