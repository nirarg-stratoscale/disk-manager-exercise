// Code generated by mockery v1.0.0
package consul

import api "github.com/hashicorp/consul/api"
import mock "github.com/stretchr/testify/mock"

// MockLocker is an autogenerated mock type for the Locker type
type MockLocker struct {
	mock.Mock
}

// LockKey provides a mock function with given fields: key
func (_m *MockLocker) LockKey(key string) (Lock, error) {
	ret := _m.Called(key)

	var r0 Lock
	if rf, ok := ret.Get(0).(func(string) Lock); ok {
		r0 = rf(key)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(Lock)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(string) error); ok {
		r1 = rf(key)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// LockOpts provides a mock function with given fields: opts
func (_m *MockLocker) LockOpts(opts *api.LockOptions) (Lock, error) {
	ret := _m.Called(opts)

	var r0 Lock
	if rf, ok := ret.Get(0).(func(*api.LockOptions) Lock); ok {
		r0 = rf(opts)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(Lock)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(*api.LockOptions) error); ok {
		r1 = rf(opts)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
