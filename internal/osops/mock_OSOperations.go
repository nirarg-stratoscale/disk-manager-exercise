// Code generated by mockery v1.0.0. DO NOT EDIT.
package osops

import mock "github.com/stretchr/testify/mock"

// MockOSOperations is an autogenerated mock type for the OSOperations type
type MockOSOperations struct {
	mock.Mock
}

// ExecCommand provides a mock function with given fields: command, args
func (_m *MockOSOperations) ExecCommand(command string, args ...string) (string, error) {
	_va := make([]interface{}, len(args))
	for _i := range args {
		_va[_i] = args[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, command)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	var r0 string
	if rf, ok := ret.Get(0).(func(string, ...string) string); ok {
		r0 = rf(command, args...)
	} else {
		r0 = ret.Get(0).(string)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(string, ...string) error); ok {
		r1 = rf(command, args...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// Hostname provides a mock function with given fields:
func (_m *MockOSOperations) Hostname() (string, error) {
	ret := _m.Called()

	var r0 string
	if rf, ok := ret.Get(0).(func() string); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(string)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func() error); ok {
		r1 = rf()
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
