// Code generated by go-swagger; DO NOT EDIT.

package disk

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/Stratoscale/disk-manager-exercise/models"
)

// DiskByIDOKCode is the HTTP code returned for type DiskByIDOK
const DiskByIDOKCode int = 200

/*DiskByIDOK successful operation

swagger:response diskByIdOK
*/
type DiskByIDOK struct {

	/*
	  In: Body
	*/
	Payload *models.Disk `json:"body,omitempty"`
}

// NewDiskByIDOK creates DiskByIDOK with default headers values
func NewDiskByIDOK() *DiskByIDOK {
	return &DiskByIDOK{}
}

// WithPayload adds the payload to the disk by Id o k response
func (o *DiskByIDOK) WithPayload(payload *models.Disk) *DiskByIDOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the disk by Id o k response
func (o *DiskByIDOK) SetPayload(payload *models.Disk) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DiskByIDOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// DiskByIDBadRequestCode is the HTTP code returned for type DiskByIDBadRequest
const DiskByIDBadRequestCode int = 400

/*DiskByIDBadRequest Invalid disk ID

swagger:response diskByIdBadRequest
*/
type DiskByIDBadRequest struct {
}

// NewDiskByIDBadRequest creates DiskByIDBadRequest with default headers values
func NewDiskByIDBadRequest() *DiskByIDBadRequest {
	return &DiskByIDBadRequest{}
}

// WriteResponse to the client
func (o *DiskByIDBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(400)
}

// DiskByIDNotFoundCode is the HTTP code returned for type DiskByIDNotFound
const DiskByIDNotFoundCode int = 404

/*DiskByIDNotFound Disk not found

swagger:response diskByIdNotFound
*/
type DiskByIDNotFound struct {
}

// NewDiskByIDNotFound creates DiskByIDNotFound with default headers values
func NewDiskByIDNotFound() *DiskByIDNotFound {
	return &DiskByIDNotFound{}
}

// WriteResponse to the client
func (o *DiskByIDNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(404)
}
